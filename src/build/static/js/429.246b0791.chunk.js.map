{"version":3,"file":"static/js/429.246b0791.chunk.js","mappings":"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","sources":["../node_modules/@ledgerhq/devices/src/hid-framing.ts","../node_modules/@ledgerhq/hw-transport/src/Transport.ts","../node_modules/@ledgerhq/devices/src/index.ts","../node_modules/@ledgerhq/logs/src/index.ts","../node_modules/@ledgerhq/hw-transport-webhid/src/TransportWebHID.ts","../node_modules/semver/classes/comparator.js","../node_modules/semver/classes/range.js","../node_modules/semver/classes/semver.js","../node_modules/semver/functions/clean.js","../node_modules/semver/functions/cmp.js","../node_modules/semver/functions/coerce.js","../node_modules/semver/functions/compare-build.js","../node_modules/semver/functions/compare-loose.js","../node_modules/semver/functions/compare.js","../node_modules/semver/functions/diff.js","../node_modules/semver/functions/eq.js","../node_modules/semver/functions/gt.js","../node_modules/semver/functions/gte.js","../node_modules/semver/functions/inc.js","../node_modules/semver/functions/lt.js","../node_modules/semver/functions/lte.js","../node_modules/semver/functions/major.js","../node_modules/semver/functions/minor.js","../node_modules/semver/functions/neq.js","../node_modules/semver/functions/parse.js","../node_modules/semver/functions/patch.js","../node_modules/semver/functions/prerelease.js","../node_modules/semver/functions/rcompare.js","../node_modules/semver/functions/rsort.js","../node_modules/semver/functions/satisfies.js","../node_modules/semver/functions/sort.js","../node_modules/semver/functions/valid.js","../node_modules/semver/index.js","../node_modules/semver/internal/constants.js","../node_modules/semver/internal/debug.js","../node_modules/semver/internal/identifiers.js","../node_modules/semver/internal/parse-options.js","../node_modules/semver/internal/re.js","../node_modules/semver/node_modules/lru-cache/index.js","../node_modules/semver/ranges/gtr.js","../node_modules/semver/ranges/intersects.js","../node_modules/semver/ranges/ltr.js","../node_modules/semver/ranges/max-satisfying.js","../node_modules/semver/ranges/min-satisfying.js","../node_modules/semver/ranges/min-version.js","../node_modules/semver/ranges/outside.js","../node_modules/semver/ranges/simplify.js","../node_modules/semver/ranges/subset.js","../node_modules/semver/ranges/to-comparators.js","../node_modules/semver/ranges/valid.js","../node_modules/yallist/iterator.js","../node_modules/yallist/yallist.js"],"sourcesContent":["import { TransportError } from \"@ledgerhq/errors\";\nexport type ResponseAcc =\n  | {\n      data: Buffer;\n      dataLength: number;\n      sequence: number;\n    }\n  | null\n  | undefined;\nconst Tag = 0x05;\n\nfunction asUInt16BE(value) {\n  const b = Buffer.alloc(2);\n  b.writeUInt16BE(value, 0);\n  return b;\n}\n\nconst initialAcc = {\n  data: Buffer.alloc(0),\n  dataLength: 0,\n  sequence: 0,\n};\n\n/**\n *\n */\nconst createHIDframing = (channel: number, packetSize: number) => {\n  return {\n    makeBlocks(apdu: Buffer): Buffer[] {\n      let data = Buffer.concat([asUInt16BE(apdu.length), apdu]);\n      const blockSize = packetSize - 5;\n      const nbBlocks = Math.ceil(data.length / blockSize);\n      data = Buffer.concat([\n        data, // fill data with padding\n        Buffer.alloc(nbBlocks * blockSize - data.length + 1).fill(0),\n      ]);\n      const blocks: Buffer[] = [];\n\n      for (let i = 0; i < nbBlocks; i++) {\n        const head = Buffer.alloc(5);\n        head.writeUInt16BE(channel, 0);\n        head.writeUInt8(Tag, 2);\n        head.writeUInt16BE(i, 3);\n        const chunk = data.slice(i * blockSize, (i + 1) * blockSize);\n        blocks.push(Buffer.concat([head, chunk]));\n      }\n\n      return blocks;\n    },\n\n    reduceResponse(acc: ResponseAcc, chunk: Buffer): ResponseAcc {\n      let { data, dataLength, sequence } = acc || initialAcc;\n\n      if (chunk.readUInt16BE(0) !== channel) {\n        throw new TransportError(\"Invalid channel\", \"InvalidChannel\");\n      }\n\n      if (chunk.readUInt8(2) !== Tag) {\n        throw new TransportError(\"Invalid tag\", \"InvalidTag\");\n      }\n\n      if (chunk.readUInt16BE(3) !== sequence) {\n        throw new TransportError(\"Invalid sequence\", \"InvalidSequence\");\n      }\n\n      if (!acc) {\n        dataLength = chunk.readUInt16BE(5);\n      }\n\n      sequence++;\n      const chunkData = chunk.slice(acc ? 5 : 7);\n      data = Buffer.concat([data, chunkData]);\n\n      if (data.length > dataLength) {\n        data = data.slice(0, dataLength);\n      }\n\n      return {\n        data,\n        dataLength,\n        sequence,\n      };\n    },\n\n    getReducedResult(acc: ResponseAcc): Buffer | null | undefined {\n      if (acc && acc.dataLength === acc.data.length) {\n        return acc.data;\n      }\n    },\n  };\n};\n\nexport default createHIDframing;\n","import EventEmitter from \"events\";\nimport type { DeviceModel } from \"@ledgerhq/devices\";\nimport {\n  TransportRaceCondition,\n  TransportError,\n  StatusCodes,\n  getAltStatusMessage,\n  TransportStatusError,\n} from \"@ledgerhq/errors\";\nexport {\n  TransportError,\n  TransportStatusError,\n  StatusCodes,\n  getAltStatusMessage,\n};\n\n/**\n */\nexport type Subscription = {\n  unsubscribe: () => void;\n};\n\n/**\n */\nexport type Device = any; // Should be a union type of all possible Device object's shape\n\nexport type DescriptorEventType = \"add\" | \"remove\";\n/**\n * A \"descriptor\" is a parameter that is specific to the implementation, and can be an ID, file path, or URL.\n * type: add or remove event\n * descriptor: a parameter that can be passed to open(descriptor)\n * deviceModel: device info on the model (is it a nano s, nano x, ...)\n * device: transport specific device info\n */\nexport interface DescriptorEvent<Descriptor> {\n  type: DescriptorEventType;\n  descriptor: Descriptor;\n  deviceModel?: DeviceModel | null | undefined;\n  device?: Device;\n}\n\n/**\n * Observer generic type, following the Observer pattern\n */\nexport type Observer<EventType, EventError = unknown> = Readonly<{\n  next: (event: EventType) => unknown;\n  error: (e: EventError) => unknown;\n  complete: () => unknown;\n}>;\n\n/**\n * The Transport class defines a generic interface for communicating with a Ledger hardware wallet.\n * There are different kind of transports based on the technology (channels like U2F, HID, Bluetooth, Webusb) and environment (Node, Web,...).\n * It is an abstract class that needs to be implemented.\n */\nexport default class Transport {\n  exchangeTimeout = 30000;\n  unresponsiveTimeout = 15000;\n  deviceModel: DeviceModel | null | undefined = null;\n\n  /**\n   * Check if the transport is supported on the current platform/browser.\n   * @returns {Promise<boolean>} A promise that resolves with a boolean indicating support.\n   */\n  static readonly isSupported: () => Promise<boolean>;\n\n  /**\n   * List all available descriptors for the transport.\n   * For a better granularity, checkout `listen()`.\n   *\n   * @returns {Promise<Array<any>>} A promise that resolves with an array of descriptors.\n   * @example\n   * TransportFoo.list().then(descriptors => ...)\n   */\n  static readonly list: () => Promise<Array<any>>;\n\n  /**\n   * Listen for device events for the transport. The method takes an observer of DescriptorEvent and returns a Subscription.\n   * A DescriptorEvent is an object containing a \"descriptor\" and a \"type\" field. The \"type\" field can be \"add\" or \"remove\", and the \"descriptor\" field can be passed to the \"open\" method.\n   * The \"listen\" method will first emit all currently connected devices and then will emit events as they occur, such as when a USB device is plugged in or a Bluetooth device becomes discoverable.\n   * @param {Observer<DescriptorEvent<any>>} observer - An object with \"next\", \"error\", and \"complete\" functions, following the observer pattern.\n   * @returns {Subscription} A Subscription object on which you can call \".unsubscribe()\" to stop listening to descriptors.\n   * @example\n  const sub = TransportFoo.listen({\n  next: e => {\n    if (e.type===\"add\") {\n      sub.unsubscribe();\n      const transport = await TransportFoo.open(e.descriptor);\n      ...\n    }\n  },\n  error: error => {},\n  complete: () => {}\n  })\n   */\n  static readonly listen: (\n    observer: Observer<DescriptorEvent<any>>\n  ) => Subscription;\n\n  /**\n   * Attempt to create a Transport instance with a specific descriptor.\n   * @param {any} descriptor - The descriptor to open the transport with.\n   * @param {number} timeout - An optional timeout for the transport connection.\n   * @returns {Promise<Transport>} A promise that resolves with a Transport instance.\n   * @example\n  TransportFoo.open(descriptor).then(transport => ...)\n   */\n  static readonly open: (\n    descriptor?: any,\n    timeout?: number\n  ) => Promise<Transport>;\n\n  /**\n   * Send data to the device using a low level API.\n   * It's recommended to use the \"send\" method for a higher level API.\n   * @param {Buffer} apdu - The data to send.\n   * @returns {Promise<Buffer>} A promise that resolves with the response data from the device.\n   */\n  exchange(_apdu: Buffer): Promise<Buffer> {\n    throw new Error(\"exchange not implemented\");\n  }\n\n  /**\n   * Send apdus in batch to the device using a low level API.\n   * The default implementation is to call exchange for each apdu.\n   * @param {Array<Buffer>} apdus - array of apdus to send.\n   * @param {Observer<Buffer>} observer - an observer that will receive the response of each apdu.\n   * @returns {Subscription} A Subscription object on which you can call \".unsubscribe()\" to stop sending apdus.\n   */\n  exchangeBulk(apdus: Buffer[], observer: Observer<Buffer>): Subscription {\n    let unsubscribed = false;\n    const unsubscribe = () => {\n      unsubscribed = true;\n    };\n\n    const main = async () => {\n      if (unsubscribed) return;\n      for (const apdu of apdus) {\n        const r = await this.exchange(apdu);\n        if (unsubscribed) return;\n        const status = r.readUInt16BE(r.length - 2);\n        if (status !== StatusCodes.OK) {\n          throw new TransportStatusError(status);\n        }\n        observer.next(r);\n      }\n    };\n\n    main().then(\n      () => !unsubscribed && observer.complete(),\n      (e) => !unsubscribed && observer.error(e)\n    );\n\n    return { unsubscribe };\n  }\n\n  /**\n   * Set the \"scramble key\" for the next data exchanges with the device.\n   * Each app can have a different scramble key and it is set internally during instantiation.\n   * @param {string} key - The scramble key to set.\n   * @deprecated This method is no longer needed for modern transports and should be migrated away from.\n   */\n  setScrambleKey(_key: string) {}\n\n  /**\n   * Close the connection with the device.\n   * @returns {Promise<void>} A promise that resolves when the transport is closed.\n   */\n  close(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  _events = new EventEmitter();\n\n  /**\n   * Listen for an event on the transport instance.\n   * Transport implementations may have specific events. Common events include:\n   * \"disconnect\" : triggered when the transport is disconnected.\n   * @param {string} eventName - The name of the event to listen for.\n   * @param {(...args: Array<any>) => any} cb - The callback function to be invoked when the event occurs.\n   */\n  on(eventName: string, cb: (...args: Array<any>) => any): void {\n    this._events.on(eventName, cb);\n  }\n\n  /**\n   * Stop listening to an event on an instance of transport.\n   */\n  off(eventName: string, cb: (...args: Array<any>) => any): void {\n    this._events.removeListener(eventName, cb);\n  }\n\n  emit(event: string, ...args: any): void {\n    this._events.emit(event, ...args);\n  }\n\n  /**\n   * Enable or not logs of the binary exchange\n   */\n  setDebugMode() {\n    console.warn(\n      \"setDebugMode is deprecated. use @ledgerhq/logs instead. No logs are emitted in this anymore.\"\n    );\n  }\n\n  /**\n   * Set a timeout (in milliseconds) for the exchange call. Only some transport might implement it. (e.g. U2F)\n   */\n  setExchangeTimeout(exchangeTimeout: number): void {\n    this.exchangeTimeout = exchangeTimeout;\n  }\n\n  /**\n   * Define the delay before emitting \"unresponsive\" on an exchange that does not respond\n   */\n  setExchangeUnresponsiveTimeout(unresponsiveTimeout: number): void {\n    this.unresponsiveTimeout = unresponsiveTimeout;\n  }\n\n  /**\n   * Send data to the device using the higher level API.\n   * @param {number} cla - The instruction class for the command.\n   * @param {number} ins - The instruction code for the command.\n   * @param {number} p1 - The first parameter for the instruction.\n   * @param {number} p2 - The second parameter for the instruction.\n   * @param {Buffer} data - The data to be sent. Defaults to an empty buffer.\n   * @param {Array<number>} statusList - A list of acceptable status codes for the response. Defaults to [StatusCodes.OK].\n   * @returns {Promise<Buffer>} A promise that resolves with the response data from the device.\n   */\n  send = async (\n    cla: number,\n    ins: number,\n    p1: number,\n    p2: number,\n    data: Buffer = Buffer.alloc(0),\n    statusList: Array<number> = [StatusCodes.OK]\n  ): Promise<Buffer> => {\n    if (data.length >= 256) {\n      throw new TransportError(\n        \"data.length exceed 256 bytes limit. Got: \" + data.length,\n        \"DataLengthTooBig\"\n      );\n    }\n\n    const response = await this.exchange(\n      Buffer.concat([\n        Buffer.from([cla, ins, p1, p2]),\n        Buffer.from([data.length]),\n        data,\n      ])\n    );\n    const sw = response.readUInt16BE(response.length - 2);\n\n    if (!statusList.some((s) => s === sw)) {\n      throw new TransportStatusError(sw);\n    }\n\n    return response;\n  };\n\n  /**\n   * create() allows to open the first descriptor available or\n   * throw if there is none or if timeout is reached.\n   * This is a light helper, alternative to using listen() and open() (that you may need for any more advanced usecase)\n   * @example\n  TransportFoo.create().then(transport => ...)\n   */\n  static create(\n    openTimeout = 3000,\n    listenTimeout?: number\n  ): Promise<Transport> {\n    return new Promise((resolve, reject) => {\n      let found = false;\n      const sub = this.listen({\n        next: (e) => {\n          found = true;\n          if (sub) sub.unsubscribe();\n          if (listenTimeoutId) clearTimeout(listenTimeoutId);\n          this.open(e.descriptor, openTimeout).then(resolve, reject);\n        },\n        error: (e) => {\n          if (listenTimeoutId) clearTimeout(listenTimeoutId);\n          reject(e);\n        },\n        complete: () => {\n          if (listenTimeoutId) clearTimeout(listenTimeoutId);\n\n          if (!found) {\n            reject(\n              new TransportError(\n                this.ErrorMessage_NoDeviceFound,\n                \"NoDeviceFound\"\n              )\n            );\n          }\n        },\n      });\n      const listenTimeoutId = listenTimeout\n        ? setTimeout(() => {\n            sub.unsubscribe();\n            reject(\n              new TransportError(\n                this.ErrorMessage_ListenTimeout,\n                \"ListenTimeout\"\n              )\n            );\n          }, listenTimeout)\n        : null;\n    });\n  }\n\n  exchangeBusyPromise: Promise<void> | null | undefined;\n  exchangeAtomicImpl = async (\n    f: () => Promise<Buffer | void>\n  ): Promise<Buffer | void> => {\n    if (this.exchangeBusyPromise) {\n      throw new TransportRaceCondition(\n        \"An action was already pending on the Ledger device. Please deny or reconnect.\"\n      );\n    }\n\n    let resolveBusy;\n    const busyPromise: Promise<void> = new Promise((r) => {\n      resolveBusy = r;\n    });\n    this.exchangeBusyPromise = busyPromise;\n    let unresponsiveReached = false;\n    const timeout = setTimeout(() => {\n      unresponsiveReached = true;\n      this.emit(\"unresponsive\");\n    }, this.unresponsiveTimeout);\n\n    try {\n      const res = await f();\n\n      if (unresponsiveReached) {\n        this.emit(\"responsive\");\n      }\n\n      return res;\n    } finally {\n      clearTimeout(timeout);\n      if (resolveBusy) resolveBusy();\n      this.exchangeBusyPromise = null;\n    }\n  };\n\n  decorateAppAPIMethods(\n    self: Record<string, any>,\n    methods: Array<string>,\n    scrambleKey: string\n  ) {\n    for (const methodName of methods) {\n      self[methodName] = this.decorateAppAPIMethod(\n        methodName,\n        self[methodName],\n        self,\n        scrambleKey\n      );\n    }\n  }\n\n  _appAPIlock: string | null = null;\n\n  decorateAppAPIMethod<R, A extends any[]>(\n    methodName: string,\n    f: (...args: A) => Promise<R>,\n    ctx: any,\n    scrambleKey: string\n  ): (...args: A) => Promise<R> {\n    return async (...args) => {\n      const { _appAPIlock } = this;\n\n      if (_appAPIlock) {\n        return Promise.reject(\n          new TransportError(\n            \"Ledger Device is busy (lock \" + _appAPIlock + \")\",\n            \"TransportLocked\"\n          )\n        );\n      }\n\n      try {\n        this._appAPIlock = methodName;\n        this.setScrambleKey(scrambleKey);\n        return await f.apply(ctx, args);\n      } finally {\n        this._appAPIlock = null;\n      }\n    };\n  }\n\n  static ErrorMessage_ListenTimeout = \"No Ledger device found (timeout)\";\n  static ErrorMessage_NoDeviceFound = \"No Ledger device found\";\n}\n","import semver from \"semver\";\n\n/**\n * The USB product IDs will be defined as MMII, encoding a model (MM) and an interface bitfield (II)\n *\n ** Model\n * Ledger Nano S : 0x10\n * Ledger Blue : 0x00\n * Ledger Nano X : 0x40\n *\n ** Interface support bitfield\n * Generic HID : 0x01\n * Keyboard HID : 0x02\n * U2F : 0x04\n * CCID : 0x08\n * WebUSB : 0x10\n */\nexport const IIGenericHID = 0x01;\nexport const IIKeyboardHID = 0x02;\nexport const IIU2F = 0x04;\nexport const IICCID = 0x08;\nexport const IIWebUSB = 0x10;\n\nexport enum DeviceModelId {\n  blue = \"blue\",\n  nanoS = \"nanoS\",\n  nanoSP = \"nanoSP\",\n  nanoX = \"nanoX\",\n  nanoFTS = \"nanoFTS\",\n}\n\nconst devices: { [key in DeviceModelId]: DeviceModel } = {\n  [DeviceModelId.blue]: {\n    id: DeviceModelId.blue,\n    productName: \"Ledger Blue\",\n    productIdMM: 0x00,\n    legacyUsbProductId: 0x0000,\n    usbOnly: true,\n    memorySize: 480 * 1024,\n    masks: [0x31000000, 0x31010000],\n    getBlockSize: (_firwareVersion: string): number => 4 * 1024,\n  },\n  [DeviceModelId.nanoS]: {\n    id: DeviceModelId.nanoS,\n    productName: \"Ledger Nano S\",\n    productIdMM: 0x10,\n    legacyUsbProductId: 0x0001,\n    usbOnly: true,\n    memorySize: 320 * 1024,\n    masks: [0x31100000],\n    getBlockSize: (firmwareVersion: string): number =>\n      semver.lt(semver.coerce(firmwareVersion) ?? \"\", \"2.0.0\")\n        ? 4 * 1024\n        : 2 * 1024,\n  },\n  [DeviceModelId.nanoSP]: {\n    id: DeviceModelId.nanoSP,\n    productName: \"Ledger Nano S Plus\",\n    productIdMM: 0x50,\n    legacyUsbProductId: 0x0005,\n    usbOnly: true,\n    memorySize: 1536 * 1024,\n    masks: [0x33100000],\n    getBlockSize: (_firmwareVersion: string): number => 32,\n  },\n  [DeviceModelId.nanoX]: {\n    id: DeviceModelId.nanoX,\n    productName: \"Ledger Nano X\",\n    productIdMM: 0x40,\n    legacyUsbProductId: 0x0004,\n    usbOnly: false,\n    memorySize: 2 * 1024 * 1024,\n    masks: [0x33000000],\n    getBlockSize: (_firwareVersion: string): number => 4 * 1024,\n    bluetoothSpec: [\n      {\n        serviceUuid: \"13d63400-2c97-0004-0000-4c6564676572\",\n        notifyUuid: \"13d63400-2c97-0004-0001-4c6564676572\",\n        writeUuid: \"13d63400-2c97-0004-0002-4c6564676572\",\n        writeCmdUuid: \"13d63400-2c97-0004-0003-4c6564676572\",\n      },\n    ],\n  },\n  [DeviceModelId.nanoFTS]: {\n    id: DeviceModelId.nanoFTS,\n    productName: \"Ledger Nano FTS\",\n    productIdMM: 0x60,\n    legacyUsbProductId: 0x0006,\n    usbOnly: false,\n    memorySize: 2 * 1024 * 1024, // ← ↓ TODO Update with actual values\n    masks: [0x33200000],\n    getBlockSize: (_firwareVersion: string): number => 4 * 1024,\n    bluetoothSpec: [\n      {\n        serviceUuid: \"13d63400-2c97-6004-0000-4c6564676572\",\n        notifyUuid: \"13d63400-2c97-6004-0001-4c6564676572\",\n        writeUuid: \"13d63400-2c97-6004-0002-4c6564676572\",\n        writeCmdUuid: \"13d63400-2c97-6004-0003-4c6564676572\",\n      },\n    ],\n  },\n};\n\nconst productMap = {\n  Blue: DeviceModelId.blue,\n  \"Nano S\": DeviceModelId.nanoS,\n  \"Nano S Plus\": DeviceModelId.nanoSP,\n  \"Nano X\": DeviceModelId.nanoX,\n  \"Nano FTS\": DeviceModelId.nanoFTS,\n};\n\nconst devicesList: DeviceModel[] = Object.values(devices);\n\n/**\n *\n */\nexport const ledgerUSBVendorId = 0x2c97;\n\n/**\n *\n */\nexport const getDeviceModel = (id: DeviceModelId): DeviceModel => {\n  const info = devices[id];\n  if (!info) throw new Error(\"device '\" + id + \"' does not exist\");\n  return info;\n};\n\n/**\n * Given a `targetId`, return the deviceModel associated to it,\n * based on the first two bytes.\n */\nexport const identifyTargetId = (\n  targetId: number\n): DeviceModel | null | undefined => {\n  const deviceModel = devicesList.find(({ masks }) =>\n    masks.find((mask) => (targetId & 0xffff0000) === mask)\n  );\n\n  return deviceModel;\n};\n\n/**\n *\n */\nexport const identifyUSBProductId = (\n  usbProductId: number\n): DeviceModel | null | undefined => {\n  const legacy = devicesList.find((d) => d.legacyUsbProductId === usbProductId);\n  if (legacy) return legacy;\n  const mm = usbProductId >> 8;\n  const deviceModel = devicesList.find((d) => d.productIdMM === mm);\n  return deviceModel;\n};\n\nexport const identifyProductName = (\n  productName: string\n): DeviceModel | null | undefined => {\n  const deviceModel = devicesList.find((d) => d.id === productMap[productName]);\n  return deviceModel;\n};\n\nconst bluetoothServices: string[] = [];\nconst serviceUuidToInfos: Record<string, BluetoothInfos> = {};\n\nfor (const id in devices) {\n  const deviceModel = devices[id];\n  const { bluetoothSpec } = deviceModel;\n  if (bluetoothSpec) {\n    for (let i = 0; i < bluetoothSpec.length; i++) {\n      const spec = bluetoothSpec[i];\n      bluetoothServices.push(spec.serviceUuid);\n      serviceUuidToInfos[spec.serviceUuid] = serviceUuidToInfos[\n        spec.serviceUuid.replace(/-/g, \"\")\n      ] = {\n        deviceModel,\n        ...spec,\n      };\n    }\n  }\n}\n\n/**\n *\n */\nexport const getBluetoothServiceUuids = (): string[] => bluetoothServices;\n\n/**\n *\n */\nexport const getInfosForServiceUuid = (\n  uuid: string\n): BluetoothInfos | undefined => serviceUuidToInfos[uuid.toLowerCase()];\n\n/**\n *\n */\nexport interface DeviceModel {\n  id: DeviceModelId;\n  productName: string;\n  productIdMM: number;\n  legacyUsbProductId: number;\n  usbOnly: boolean;\n  memorySize: number;\n  masks: number[];\n  // blockSize: number, // THIS FIELD IS DEPRECATED, use getBlockSize\n  getBlockSize: (firmwareVersion: string) => number;\n  bluetoothSpec?: {\n    serviceUuid: string;\n    writeUuid: string;\n    writeCmdUuid: string;\n    notifyUuid: string;\n  }[];\n}\n\n/**\n *\n */\nexport interface BluetoothInfos {\n  deviceModel: DeviceModel;\n  serviceUuid: string;\n  writeUuid: string;\n  writeCmdUuid: string;\n  notifyUuid: string;\n}\n","/**\n * A Log object\n */\nexport interface Log {\n  type: string;\n  message?: string;\n  data?: any;\n  // unique amount all logs\n  id: string;\n  // date of the log\n  date: Date;\n}\nexport type Unsubscribe = () => void;\nexport type Subscriber = (arg0: Log) => void;\nlet id = 0;\nconst subscribers: Subscriber[] = [];\n\n/**\n * log something\n * @param type a namespaced identifier of the log (it is not a level like \"debug\", \"error\" but more like \"apdu-in\", \"apdu-out\", etc...)\n * @param message a clear message of the log associated to the type\n */\nexport const log = (type: string, message?: string, data?: any) => {\n  const obj: Log = {\n    type,\n    id: String(++id),\n    date: new Date(),\n  };\n  if (message) obj.message = message;\n  if (data) obj.data = data;\n  dispatch(obj);\n};\n\n/**\n * listen to logs.\n * @param cb that is called for each future log() with the Log object\n * @return a function that can be called to unsubscribe the listener\n */\nexport const listen = (cb: Subscriber): Unsubscribe => {\n  subscribers.push(cb);\n  return () => {\n    const i = subscribers.indexOf(cb);\n\n    if (i !== -1) {\n      // equivalent of subscribers.splice(i, 1) // https://twitter.com/Rich_Harris/status/1125850391155965952\n      subscribers[i] = subscribers[subscribers.length - 1];\n      subscribers.pop();\n    }\n  };\n};\n\nfunction dispatch(log: Log) {\n  for (let i = 0; i < subscribers.length; i++) {\n    try {\n      subscribers[i](log);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\n// for debug purpose\n\ndeclare global {\n  interface Window {\n    __ledgerLogsListen: any;\n  }\n}\n\nif (typeof window !== \"undefined\") {\n  window.__ledgerLogsListen = listen;\n}\n","import Transport from \"@ledgerhq/hw-transport\";\nimport type {\n  Observer,\n  DescriptorEvent,\n  Subscription,\n} from \"@ledgerhq/hw-transport\";\nimport hidFraming from \"@ledgerhq/devices/lib/hid-framing\";\nimport { identifyUSBProductId, ledgerUSBVendorId } from \"@ledgerhq/devices\";\nimport type { DeviceModel } from \"@ledgerhq/devices\";\nimport { log } from \"@ledgerhq/logs\";\nimport {\n  TransportOpenUserCancelled,\n  DisconnectedDeviceDuringOperation,\n  DisconnectedDevice,\n  TransportError,\n} from \"@ledgerhq/errors\";\n\nconst ledgerDevices = [\n  {\n    vendorId: ledgerUSBVendorId,\n  },\n];\n\nconst isSupported = () =>\n  Promise.resolve(!!(window.navigator && window.navigator.hid));\n\nconst getHID = (): HID => {\n  // $FlowFixMe\n  const { hid } = navigator;\n  if (!hid)\n    throw new TransportError(\n      \"navigator.hid is not supported\",\n      \"HIDNotSupported\"\n    );\n  return hid;\n};\n\nasync function requestLedgerDevices(): Promise<HIDDevice[]> {\n  const device = await getHID().requestDevice({\n    filters: ledgerDevices,\n  });\n  if (Array.isArray(device)) return device;\n  return [device];\n}\n\nasync function getLedgerDevices(): Promise<HIDDevice[]> {\n  const devices = await getHID().getDevices();\n  return devices.filter((d) => d.vendorId === ledgerUSBVendorId);\n}\n\nasync function getFirstLedgerDevice(): Promise<HIDDevice> {\n  const existingDevices = await getLedgerDevices();\n  if (existingDevices.length > 0) return existingDevices[0];\n  const devices = await requestLedgerDevices();\n  return devices[0];\n}\n/**\n * WebHID Transport implementation\n * @example\n * import TransportWebHID from \"@ledgerhq/hw-transport-webhid\";\n * ...\n * TransportWebHID.create().then(transport => ...)\n */\n\nexport default class TransportWebHID extends Transport {\n  device: HIDDevice;\n  deviceModel: DeviceModel | null | undefined;\n  channel = Math.floor(Math.random() * 0xffff);\n  packetSize = 64;\n\n  constructor(device: HIDDevice) {\n    super();\n    this.device = device;\n    this.deviceModel =\n      typeof device.productId === \"number\"\n        ? identifyUSBProductId(device.productId)\n        : undefined;\n    device.addEventListener(\"inputreport\", this.onInputReport);\n  }\n\n  inputs: Buffer[] = [];\n  inputCallback: ((arg0: Buffer) => void) | null | undefined;\n  read = (): Promise<Buffer> => {\n    if (this.inputs.length) {\n      return Promise.resolve((this.inputs.shift() as unknown) as Buffer);\n    }\n\n    return new Promise((success) => {\n      this.inputCallback = success;\n    });\n  };\n  onInputReport = (e: HIDInputReportEvent) => {\n    const buffer = Buffer.from(e.data.buffer);\n\n    if (this.inputCallback) {\n      this.inputCallback(buffer);\n      this.inputCallback = null;\n    } else {\n      this.inputs.push(buffer);\n    }\n  };\n\n  /**\n   * Check if WebUSB transport is supported.\n   */\n  static isSupported = isSupported;\n\n  /**\n   * List the WebUSB devices that was previously authorized by the user.\n   */\n  static list = getLedgerDevices;\n\n  /**\n   * Actively listen to WebUSB devices and emit ONE device\n   * that was either accepted before, if not it will trigger the native permission UI.\n   *\n   * Important: it must be called in the context of a UI click!\n   */\n  static listen = (\n    observer: Observer<DescriptorEvent<HIDDevice>>\n  ): Subscription => {\n    let unsubscribed = false;\n    getFirstLedgerDevice().then(\n      (device) => {\n        if (!device) {\n          observer.error(\n            new TransportOpenUserCancelled(\"Access denied to use Ledger device\")\n          );\n        } else if (!unsubscribed) {\n          const deviceModel =\n            typeof device.productId === \"number\"\n              ? identifyUSBProductId(device.productId)\n              : undefined;\n          observer.next({\n            type: \"add\",\n            descriptor: device,\n            deviceModel,\n          });\n          observer.complete();\n        }\n      },\n      (error) => {\n        observer.error(new TransportOpenUserCancelled(error.message));\n      }\n    );\n\n    function unsubscribe() {\n      unsubscribed = true;\n    }\n\n    return {\n      unsubscribe,\n    };\n  };\n\n  /**\n   * Similar to create() except it will always display the device permission (even if some devices are already accepted).\n   */\n  static async request() {\n    const [device] = await requestLedgerDevices();\n    return TransportWebHID.open(device);\n  }\n\n  /**\n   * Similar to create() except it will never display the device permission (it returns a Promise<?Transport>, null if it fails to find a device).\n   */\n  static async openConnected() {\n    const devices = await getLedgerDevices();\n    if (devices.length === 0) return null;\n    return TransportWebHID.open(devices[0]);\n  }\n\n  /**\n   * Create a Ledger transport with a HIDDevice\n   */\n  static async open(device: HIDDevice) {\n    await device.open();\n    const transport = new TransportWebHID(device);\n\n    const onDisconnect = (e) => {\n      if (device === e.device) {\n        getHID().removeEventListener(\"disconnect\", onDisconnect);\n\n        transport._emitDisconnect(new DisconnectedDevice());\n      }\n    };\n\n    getHID().addEventListener(\"disconnect\", onDisconnect);\n    return transport;\n  }\n\n  _disconnectEmitted = false;\n  _emitDisconnect = (e: Error) => {\n    if (this._disconnectEmitted) return;\n    this._disconnectEmitted = true;\n    this.emit(\"disconnect\", e);\n  };\n\n  /**\n   * Release the transport device\n   */\n  async close(): Promise<void> {\n    await this.exchangeBusyPromise;\n    this.device.removeEventListener(\"inputreport\", this.onInputReport);\n    await this.device.close();\n  }\n\n  /**\n   * Exchange with the device using APDU protocol.\n   * @param apdu\n   * @returns a promise of apdu response\n   */\n  exchange = async (apdu: Buffer): Promise<Buffer> => {\n    const b = await this.exchangeAtomicImpl(async () => {\n      const { channel, packetSize } = this;\n      log(\"apdu\", \"=> \" + apdu.toString(\"hex\"));\n      const framing = hidFraming(channel, packetSize);\n      // Write...\n      const blocks = framing.makeBlocks(apdu);\n\n      for (let i = 0; i < blocks.length; i++) {\n        await this.device.sendReport(0, blocks[i]);\n      }\n\n      // Read...\n      let result;\n      let acc;\n\n      while (!(result = framing.getReducedResult(acc))) {\n        const buffer = await this.read();\n        acc = framing.reduceResponse(acc, buffer);\n      }\n\n      log(\"apdu\", \"<= \" + result.toString(\"hex\"));\n      return result;\n    }).catch((e) => {\n      if (e && e.message && e.message.includes(\"write\")) {\n        this._emitDisconnect(e);\n\n        throw new DisconnectedDeviceDuringOperation(e.message);\n      }\n\n      throw e;\n    });\n    return b as Buffer;\n  };\n\n  setScrambleKey() {}\n}\n","const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    options = parseOptions(options)\n\n    // Special cases where nothing can possibly be lower\n    if (options.includePrerelease &&\n      (this.value === '<0.0.0-0' || comp.value === '<0.0.0-0')) {\n      return false\n    }\n    if (!options.includePrerelease &&\n      (this.value.startsWith('<0.0.0') || comp.value.startsWith('<0.0.0'))) {\n      return false\n    }\n\n    // Same direction increasing (> or >=)\n    if (this.operator.startsWith('>') && comp.operator.startsWith('>')) {\n      return true\n    }\n    // Same direction decreasing (< or <=)\n    if (this.operator.startsWith('<') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // same SemVer and both sides are inclusive (<= or >=)\n    if (\n      (this.semver.version === comp.semver.version) &&\n      this.operator.includes('=') && comp.operator.includes('=')) {\n      return true\n    }\n    // opposite directions less than\n    if (cmp(this.semver, '<', comp.semver, options) &&\n      this.operator.startsWith('>') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // opposite directions greater than\n    if (cmp(this.semver, '>', comp.semver, options) &&\n      this.operator.startsWith('<') && comp.operator.startsWith('>')) {\n      return true\n    }\n    return false\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.format()\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First, split based on boolean or ||\n    this.raw = range\n    this.set = range\n      .split('||')\n      // map the range to a 2d array of comparators\n      .map(r => this.parseRange(r.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${range}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0) {\n        this.set = [first]\n      } else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.format()\n  }\n\n  format () {\n    this.range = this.set\n      .map((comps) => {\n        return comps.join(' ').trim()\n      })\n      .join('||')\n      .trim()\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    range = range.trim()\n\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts =\n      (this.options.includePrerelease && FLAG_INCLUDE_PRERELEASE) |\n      (this.options.loose && FLAG_LOOSE)\n    const memoKey = memoOpts + ':' + range\n    const cached = cache.get(memoKey)\n    if (cached) {\n      return cached\n    }\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range)\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n\n    // normalize spaces\n    range = range.split(/\\s+/).join(' ')\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    let rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n\n    if (loose) {\n      // in loose mode, throw out any that are not valid comparators\n      rangeList = rangeList.filter(comp => {\n        debug('loose invalid filter', comp, this.options)\n        return !!comp.match(re[t.COMPARATORLOOSE])\n      })\n    }\n    debug('range list', rangeList)\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const rangeMap = new Map()\n    const comparators = rangeList.map(comp => new Comparator(comp, this.options))\n    for (const comp of comparators) {\n      if (isNullSet(comp)) {\n        return [comp]\n      }\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has('')) {\n      rangeMap.delete('')\n    }\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\n\nmodule.exports = Range\n\nconst LRU = require('lru-cache')\nconst cache = new LRU({ max: 1000 })\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace,\n} = require('../internal/re')\nconst { FLAG_INCLUDE_PRERELEASE, FLAG_LOOSE } = require('../internal/constants')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\n// ~0.0.1 --> >=0.0.1 <0.1.0-0\nconst replaceTildes = (comp, options) =>\n  comp.trim().split(/\\s+/).map((c) => {\n    return replaceTilde(c, options)\n  }).join(' ')\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\n// ^0.0.1 --> >=0.0.1 <0.0.2-0\n// ^0.1.0 --> >=0.1.0 <0.2.0-0\nconst replaceCarets = (comp, options) =>\n  comp.trim().split(/\\s+/).map((c) => {\n    return replaceCaret(c, options)\n  }).join(' ')\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map((c) => {\n    return replaceXRange(c, options)\n  }).join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<') {\n        pr = '-0'\n      }\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp.trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return (`${from} ${to}`).trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid version. Must be a string. Got type \"${typeof version}\".`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier, identifierBase) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier, identifierBase)\n        this.inc('pre', identifier, identifierBase)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier, identifierBase)\n        }\n        this.inc('pre', identifier, identifierBase)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre': {\n        const base = Number(identifierBase) ? 1 : 0\n\n        if (!identifier && identifierBase === false) {\n          throw new Error('invalid increment argument: identifier is empty')\n        }\n\n        if (this.prerelease.length === 0) {\n          this.prerelease = [base]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            if (identifier === this.prerelease.join('.') && identifierBase === false) {\n              throw new Error('invalid increment argument: identifier already exists')\n            }\n            this.prerelease.push(base)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          let prerelease = [identifier, base]\n          if (identifierBase === false) {\n            prerelease = [identifier]\n          }\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = prerelease\n            }\n          } else {\n            this.prerelease = prerelease\n          }\n        }\n        break\n      }\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.format()\n    this.raw = this.version\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst { re, t } = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    let next\n    while ((next = re[t.COERCERTL].exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    re[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  return parse(`${match[2]}.${match[3] || '0'}.${match[4] || '0'}`, options)\n}\nmodule.exports = coerce\n","const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","const parse = require('./parse.js')\n\nconst diff = (version1, version2) => {\n  const v1 = parse(version1, null, true)\n  const v2 = parse(version2, null, true)\n  const comparison = v1.compare(v2)\n\n  if (comparison === 0) {\n    return null\n  }\n\n  const v1Higher = comparison > 0\n  const highVersion = v1Higher ? v1 : v2\n  const lowVersion = v1Higher ? v2 : v1\n  const highHasPre = !!highVersion.prerelease.length\n\n  // add the `pre` prefix if we are going to a prerelease version\n  const prefix = highHasPre ? 'pre' : ''\n\n  if (v1.major !== v2.major) {\n    return prefix + 'major'\n  }\n\n  if (v1.minor !== v2.minor) {\n    return prefix + 'minor'\n  }\n\n  if (v1.patch !== v2.patch) {\n    return prefix + 'patch'\n  }\n\n  // at this point we know stable versions match but overall versions are not equal,\n  // so either they are both prereleases, or the lower version is a prerelease\n\n  if (highHasPre) {\n    // high and low are preleases\n    return 'prerelease'\n  }\n\n  if (lowVersion.patch) {\n    // anything higher than a patch bump would result in the wrong version\n    return 'patch'\n  }\n\n  if (lowVersion.minor) {\n    // anything higher than a minor bump would result in the wrong version\n    return 'minor'\n  }\n\n  // bumping major/minor/patch all have same result\n  return 'major'\n}\n\nmodule.exports = diff\n","const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier, identifierBase) => {\n  if (typeof (options) === 'string') {\n    identifierBase = identifier\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(\n      version instanceof SemVer ? version.version : version,\n      options\n    ).inc(release, identifier, identifierBase).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","const SemVer = require('../classes/semver')\nconst parse = (version, options, throwErrors = false) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    if (!throwErrors) {\n      return null\n    }\n    throw er\n  }\n}\n\nmodule.exports = parse\n","const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nconst constants = require('./internal/constants')\nconst SemVer = require('./classes/semver')\nconst identifiers = require('./internal/identifiers')\nconst parse = require('./functions/parse')\nconst valid = require('./functions/valid')\nconst clean = require('./functions/clean')\nconst inc = require('./functions/inc')\nconst diff = require('./functions/diff')\nconst major = require('./functions/major')\nconst minor = require('./functions/minor')\nconst patch = require('./functions/patch')\nconst prerelease = require('./functions/prerelease')\nconst compare = require('./functions/compare')\nconst rcompare = require('./functions/rcompare')\nconst compareLoose = require('./functions/compare-loose')\nconst compareBuild = require('./functions/compare-build')\nconst sort = require('./functions/sort')\nconst rsort = require('./functions/rsort')\nconst gt = require('./functions/gt')\nconst lt = require('./functions/lt')\nconst eq = require('./functions/eq')\nconst neq = require('./functions/neq')\nconst gte = require('./functions/gte')\nconst lte = require('./functions/lte')\nconst cmp = require('./functions/cmp')\nconst coerce = require('./functions/coerce')\nconst Comparator = require('./classes/comparator')\nconst Range = require('./classes/range')\nconst satisfies = require('./functions/satisfies')\nconst toComparators = require('./ranges/to-comparators')\nconst maxSatisfying = require('./ranges/max-satisfying')\nconst minSatisfying = require('./ranges/min-satisfying')\nconst minVersion = require('./ranges/min-version')\nconst validRange = require('./ranges/valid')\nconst outside = require('./ranges/outside')\nconst gtr = require('./ranges/gtr')\nconst ltr = require('./ranges/ltr')\nconst intersects = require('./ranges/intersects')\nconst simplifyRange = require('./ranges/simplify')\nconst subset = require('./ranges/subset')\nmodule.exports = {\n  parse,\n  valid,\n  clean,\n  inc,\n  diff,\n  major,\n  minor,\n  patch,\n  prerelease,\n  compare,\n  rcompare,\n  compareLoose,\n  compareBuild,\n  sort,\n  rsort,\n  gt,\n  lt,\n  eq,\n  neq,\n  gte,\n  lte,\n  cmp,\n  coerce,\n  Comparator,\n  Range,\n  satisfies,\n  toComparators,\n  maxSatisfying,\n  minSatisfying,\n  minVersion,\n  validRange,\n  outside,\n  gtr,\n  ltr,\n  intersects,\n  simplifyRange,\n  subset,\n  SemVer,\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,\n  RELEASE_TYPES: constants.RELEASE_TYPES,\n  compareIdentifiers: identifiers.compareIdentifiers,\n  rcompareIdentifiers: identifiers.rcompareIdentifiers,\n}\n","// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\nconst RELEASE_TYPES = [\n  'major',\n  'premajor',\n  'minor',\n  'preminor',\n  'patch',\n  'prepatch',\n  'prerelease',\n]\n\nmodule.exports = {\n  MAX_LENGTH,\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_INTEGER,\n  RELEASE_TYPES,\n  SEMVER_SPEC_VERSION,\n  FLAG_INCLUDE_PRERELEASE: 0b001,\n  FLAG_LOOSE: 0b010,\n}\n","const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n","// parse out just the options we care about\nconst looseOption = Object.freeze({ loose: true })\nconst emptyOpts = Object.freeze({ })\nconst parseOptions = options => {\n  if (!options) {\n    return emptyOpts\n  }\n\n  if (typeof options !== 'object') {\n    return looseOption\n  }\n\n  return options\n}\nmodule.exports = parseOptions\n","const { MAX_SAFE_COMPONENT_LENGTH } = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst createToken = (name, value, isGlobal) => {\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '[0-9]+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*')\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', '[0-9A-Za-z-]+')\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCE', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n","'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n","// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2, options)\n}\nmodule.exports = intersects\n","const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin))) {\n      minver = setMin\n    }\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst { ANY } = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let first = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!first) {\n        first = version\n      }\n    } else {\n      if (prev) {\n        set.push([first, prev])\n      }\n      prev = null\n      first = null\n    }\n  }\n  if (first) {\n    set.push([first, null])\n  }\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max) {\n      ranges.push(min)\n    } else if (!max && min === v[0]) {\n      ranges.push('*')\n    } else if (!max) {\n      ranges.push(`>=${min}`)\n    } else if (min === v[0]) {\n      ranges.push(`<=${max}`)\n    } else {\n      ranges.push(`${min} - ${max}`)\n    }\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom) {\n    return true\n  }\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub) {\n        continue OUTER\n      }\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull) {\n      return false\n    }\n  }\n  return true\n}\n\nconst minimumVersionWithPreRelease = [new Comparator('>=0.0.0-0')]\nconst minimumVersion = [new Comparator('>=0.0.0')]\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom) {\n    return true\n  }\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY) {\n      return true\n    } else if (options.includePrerelease) {\n      sub = minimumVersionWithPreRelease\n    } else {\n      sub = minimumVersion\n    }\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease) {\n      return true\n    } else {\n      dom = minimumVersion\n    }\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=') {\n      gt = higherGT(gt, c, options)\n    } else if (c.operator === '<' || c.operator === '<=') {\n      lt = lowerLT(lt, c, options)\n    } else {\n      eqSet.add(c.semver)\n    }\n  }\n\n  if (eqSet.size > 1) {\n    return null\n  }\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0) {\n      return null\n    } else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) {\n      return null\n    }\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options)) {\n      return null\n    }\n\n    if (lt && !satisfies(eq, String(lt), options)) {\n      return null\n    }\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt) {\n          return false\n        }\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt) {\n          return false\n        }\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0) {\n      return false\n    }\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0) {\n    return false\n  }\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0) {\n    return false\n  }\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre) {\n    return false\n  }\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n","'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n","'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n"],"names":["errors_1","require","asUInt16BE","value","b","Buffer","alloc","writeUInt16BE","initialAcc","data","dataLength","sequence","exports","channel","packetSize","makeBlocks","apdu","concat","length","blockSize","nbBlocks","Math","ceil","fill","blocks","i","head","writeUInt8","chunk","slice","push","reduceResponse","acc","_a","readUInt16BE","TransportError","readUInt8","chunkData","getReducedResult","Transport","_this","_classCallCheck","exchangeTimeout","unresponsiveTimeout","deviceModel","_events","EventEmitter","send","cla","ins","p1","p2","arguments","undefined","statusList","StatusCodes","OK","__awaiter","_regeneratorRuntime","mark","_callee","response","sw","wrap","_context","prev","next","this","exchange","from","sent","some","s","TransportStatusError","abrupt","stop","exchangeAtomicImpl","f","_callee2","resolveBusy","busyPromise","unresponsiveReached","timeout","res","_this2","_context2","exchangeBusyPromise","TransportRaceCondition","Promise","r","setTimeout","emit","clearTimeout","finish","_appAPIlock","_createClass","key","_apdu","Error","apdus","observer","unsubscribed","_callee3","_iterator","_step","status","_context3","_createForOfIteratorHelper","n","done","t0","e","then","complete","error","unsubscribe","_key","resolve","eventName","cb","on","removeListener","event","_this$_events","_len","args","Array","_key2","apply","console","warn","self","methods","scrambleKey","_step2","_iterator2","methodName","decorateAppAPIMethod","err","ctx","_this4","_len2","_key3","_callee4","_context4","reject","setScrambleKey","_this5","openTimeout","listenTimeout","found","sub","listen","listenTimeoutId","open","descriptor","ErrorMessage_NoDeviceFound","ErrorMessage_ListenTimeout","DeviceModelId","devices","blue","id","productName","productIdMM","legacyUsbProductId","usbOnly","memorySize","masks","getBlockSize","_firwareVersion","nanoS","firmwareVersion","semver","nanoSP","_firmwareVersion","nanoX","bluetoothSpec","serviceUuid","notifyUuid","writeUuid","writeCmdUuid","nanoFTS","devicesList","Object","values","ledgerUSBVendorId","identifyUSBProductId","usbProductId","legacy","find","d","mm","bluetoothServices","serviceUuidToInfos","spec","replace","__assign","subscribers","log","type","message","obj","String","date","Date","dispatch","window","__ledgerLogsListen","indexOf","pop","ledgerDevices","vendorId","isSupported","navigator","hid","getHID","requestLedgerDevices","requestDevice","filters","device","isArray","getLedgerDevices","getDevices","filter","TransportWebHID","_super","call","floor","random","inputs","read","shift","success","inputCallback","onInputReport","buffer","_disconnectEmitted","_emitDisconnect","toString","framing","hidFraming","sendReport","_b","result","includes","DisconnectedDeviceDuringOperation","productId","addEventListener","__extends","request","__read","openConnected","transport","onDisconnect","removeEventListener","DisconnectedDevice","prototype","close","list","existingDevices","getFirstLedgerDevice","TransportOpenUserCancelled","ANY","Symbol","Comparator","comp","options","parseOptions","loose","debug","parse","operator","version","re","t","COMPARATORLOOSE","COMPARATOR","m","match","TypeError","SemVer","er","cmp","Range","test","includePrerelease","startsWith","get","module","_require","range","raw","set","format","split","map","parseRange","trim","c","first","isNullSet","isAny","comps","join","memoKey","FLAG_INCLUDE_PRERELEASE","FLAG_LOOSE","cached","cache","hr","HYPHENRANGELOOSE","HYPHENRANGE","hyphenReplace","COMPARATORTRIM","comparatorTrimReplace","rangeList","TILDETRIM","tildeTrimReplace","CARETTRIM","caretTrimReplace","parseComparator","replaceGTE0","rangeMap","Map","comparators","size","has","delete","_toConsumableArray","thisComparators","isSatisfiable","rangeComparators","every","thisComparator","rangeComparator","intersects","testSet","max","_require2","remainingComparators","testComparator","otherComparator","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","toLowerCase","replaceTilde","TILDELOOSE","TILDE","_","M","p","pr","ret","replaceCaret","CARETLOOSE","CARET","z","replaceXRange","XRANGELOOSE","XRANGE","gtlt","xM","xm","xp","anyX","STAR","GTE0PRE","GTE0","incPr","$0","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","tb","prerelease","allowed","major","minor","patch","MAX_LENGTH","MAX_SAFE_INTEGER","compareIdentifiers","LOOSE","FULL","num","build","other","compareMain","comparePre","a","release","identifier","identifierBase","inc","base","Number","isNaN","eq","neq","gt","gte","lt","lte","op","rtl","COERCERTL","exec","index","lastIndex","COERCE","versionA","versionB","compare","compareBuild","version1","version2","v1","v2","comparison","v1Higher","lowVersion","highHasPre","prefix","throwErrors","parsed","sort","v","internalRe","constants","identifiers","valid","clean","diff","rcompare","compareLoose","rsort","coerce","satisfies","toComparators","maxSatisfying","minSatisfying","minVersion","validRange","outside","gtr","ltr","simplifyRange","subset","src","tokens","SEMVER_SPEC_VERSION","RELEASE_TYPES","rcompareIdentifiers","MAX_SAFE_COMPONENT_LENGTH","process","NODE_DEBUG","_console","numeric","anum","bnum","looseOption","freeze","emptyOpts","R","createToken","name","isGlobal","RegExp","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","BUILDIDENTIFIER","MAINVERSION","PRERELEASE","BUILD","FULLPLAIN","MAINVERSIONLOOSE","PRERELEASELOOSE","LOOSEPLAIN","XRANGEIDENTIFIER","XRANGEIDENTIFIERLOOSE","GTLT","XRANGEPLAIN","XRANGEPLAINLOOSE","LONETILDE","LONECARET","Yallist","MAX","LENGTH","LENGTH_CALCULATOR","ALLOW_STALE","MAX_AGE","DISPOSE","NO_DISPOSE_ON_SET","LRU_LIST","CACHE","UPDATE_AGE_ON_GET","naiveLength","LRUCache","Infinity","lc","stale","maxAge","dispose","noDisposeOnSet","updateAgeOnGet","reset","mL","allowStale","mA","lC","forEach","hit","fn","thisp","walker","tail","forEachStep","toArray","k","_this3","isStale","now","h","len","del","item","Entry","unshift","node","arr","l","expiresAt","doUse","unshiftNode","removeNode","r1","r2","versions","maxSV","rangeObj","min","minSV","minver","_loop","setMin","comparator","compver","hilo","gtfn","ltefn","ltfn","ecomp","high","low","_ret","ranges","_i","_set","_set$_i","_slicedToArray","simplified","original","minimumVersionWithPreRelease","minimumVersion","simpleSubset","dom","_step3","gtltComp","eqSet","Set","_iterator3","higherGT","lowerLT","add","_step4","higher","lower","hasDomLT","hasDomGT","_iterator4","_step6","_iterator6","needDomLTPre","needDomGTPre","_step5","_iterator5","sawNonNull","OUTER","simpleSub","simpleDom","isSub","iterator","insert","inserted","Node","create","pushNode","forEachReverse","getReverse","mapReverse","reduce","initial","reduceReverse","toArrayReverse","sliceReverse","splice","start","deleteCount","reverse"],"sourceRoot":""}